$font-family-sans-serif: Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";

// CyberFortress Colors

$very-dark: #031927;
$dark: #2D3047;
$dark-gray: #8693AB;
$gray: #CEDBE5;
$light-gray: #E3E9F2;
$lightest: #F5F9FF;

/* Accent Colors*/
$orange: #F79253;
$teal: #5CB0BC;
$purple: #63308F;
$dark-purple: #38215C;
// $bright-purple: #632999;

/* Risk Level Colors */
$r1: #cc444b; // red - worst
$r2: #d8774f;
$r3: #de9151;
$r4: #e9b15d;
$r5: #fff275;
$r6: #d3e468;
$r7: #7ac74f; // green - best

// Update Bulma's global variables
$family-sans-serif: "Roboto", sans-serif;
$grey-dark: $dark-gray;
$grey-light: $light-gray;
$primary: $orange;
$link: $teal;

$footer-background-color: $dark;
$footer-color: $lightest;

@import "../node_modules/bulma/bulma.sass";

/*******************************************************/
/******* Breakpoints / Media Query Mixin ***************/
/*******************************************************/

// Small tablets and large smartphones (landscape view)
$screen-sm-min: 576px;
// Small tablets (portrait view)
$screen-md-min: 768px;
// Tablets and small desktops
$screen-lg-min: 992px;
// Large tablets and desktops
$screen-xl-min: 1200px;

// Small devices
@mixin sm {
   @media (min-width: #{$screen-sm-min}) {
       @content;
   }
}

// Medium devices
@mixin md {
   @media (min-width: #{$screen-md-min}) {
       @content;
   }
}

// Large devices
@mixin lg {
   @media (min-width: #{$screen-lg-min}) {
       @content;
   }
}

// Extra large devices
@mixin xl {
   @media (min-width: #{$screen-xl-min}) {
       @content;
   }
}

// Custom devices
@mixin rwd($screen) {
   @media (min-width: $screen+'px') {
       @content;
   }
}

/*******************************************************/
/******* Linear Gradients Mixin / Functions ************/
/*******************************************************/
@mixin linear-gradient($direction, $color-stops...){
  // Direction has been omitted and happens to be a $color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }
  // Color fall back incase gradient not supported
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

// Test if `$value` is a valid direction

@function is-direction($value) {
  $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

  @return $is-keyword or $is-angle;
}

/// Convert a direction to legacy syntax
@function legacy-direction($value) {
  @if is-direction($value) == false {
    @error "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.";
  }

  $conversion-map: (
    to top          : bottom,
    to top right    : bottom left,
    to right top    : left bottom,
    to right        : left,
    to bottom right : top left,
    to right bottom : left top,
    to bottom       : top,
    to bottom left  : top right,
    to left bottom  : right top,
    to left         : right,
    to left top     : right bottom,
    to top left     : bottom right
  );

  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }

  @return 90deg - $value;
}



h1,h1.title {
  font-size:$size-1;
}

h2,h2.title {
  font-size:$size-2;
}

h3,h3.title  {
  font-size:$size-3;
}

h4,h4.title  {
  font-size:$size-4;
}

h5,h5.title {
  font-size:$size-5;
}

h6,h6.title {
  font-size:$size-6;
}

p {
  font-size:$size-5;
  color: rgba($dark, .8);
  margin-bottom: 10px;
  strong  {
    color: rgba($dark, .8);
  }
}

ul {
  &.no-style {
    margin-left: 0;

    li {
      list-style: none;
    }
  }
}

footer.footer {
  h6.is-uppercase {
    color: $orange;
  }
  a {
    color: $lightest;
    display: inline-block;
    padding-right: 1em;
    &:hover{
      color: $teal;
    }
  }
}
